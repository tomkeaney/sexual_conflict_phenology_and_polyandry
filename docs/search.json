[
  {
    "objectID": "notes.html",
    "href": "notes.html",
    "title": "Project meeting notes",
    "section": "",
    "text": "Males often arrive early, and this has fitness benefits - early monopolisation of females, the chance to mate throughout the mating season etc.\nFemales might not want to arrive so early because they don’t have to mate so much, mating a lot might be bad, or they want to time arrival/emergence with resource availability for their offspring.\nBut if males keep arriving earlier, selection at one level starts to favour earlier arrival in females as well, because the risk of going unmated becomes large.\nThis can start a runaway process of earlier and earlier emergence.\nHowever this is eventually stopped when female arrival gets too far away from the resource peak.\nThe result is sexual conflict load, where females are potentially not optimally adapted on either front.\n\n\n\n\n\nThe current model only considers females that can be inseminated once. What happens if there is polyandry?\nMy first thoughts are: females will deplete male sperm stores more rapidly, which might increase the rate of matelessness and select females that arrive earlier. This pushes emergence time further still from the resource. However, now there is sperm competition. If there is last male precedence, then perhaps selection on males to arrive earlier is abated. This is potentially good for the population because the arms race does not drive arrival time as far away from the resource as previously found."
  },
  {
    "objectID": "notes.html#section",
    "href": "notes.html#section",
    "title": "Project meeting notes",
    "section": "",
    "text": "Males often arrive early, and this has fitness benefits - early monopolisation of females, the chance to mate throughout the mating season etc.\nFemales might not want to arrive so early because they don’t have to mate so much, mating a lot might be bad, or they want to time arrival/emergence with resource availability for their offspring.\nBut if males keep arriving earlier, selection at one level starts to favour earlier arrival in females as well, because the risk of going unmated becomes large.\nThis can start a runaway process of earlier and earlier emergence.\nHowever this is eventually stopped when female arrival gets too far away from the resource peak.\nThe result is sexual conflict load, where females are potentially not optimally adapted on either front.\n\n\n\n\n\nThe current model only considers females that can be inseminated once. What happens if there is polyandry?\nMy first thoughts are: females will deplete male sperm stores more rapidly, which might increase the rate of matelessness and select females that arrive earlier. This pushes emergence time further still from the resource. However, now there is sperm competition. If there is last male precedence, then perhaps selection on males to arrive earlier is abated. This is potentially good for the population because the arms race does not drive arrival time as far away from the resource as previously found."
  },
  {
    "objectID": "simulation.html",
    "href": "simulation.html",
    "title": "Phenology simulation",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(MoMAColors)"
  },
  {
    "objectID": "simulation.html#load-packages",
    "href": "simulation.html#load-packages",
    "title": "Phenology simulation",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(MoMAColors)"
  },
  {
    "objectID": "simulation.html#converting-matlab-code-to-r",
    "href": "simulation.html#converting-matlab-code-to-r",
    "title": "Phenology simulation",
    "section": "Converting matlab code to R",
    "text": "Converting matlab code to R\nThis project is an extension of Ekrem and Kokko (2023). As a first step, we convert the matlab code that study was written in to R code, which is more familiar for me.\n\n\nCode\nsimulation_function &lt;- function(data,\n                                popsize = 10,\n                                d,\n                                v,\n                                C,\n                                L,\n                                mut,\n                                mutsize,\n                                initmean_shared = 0,\n                                initmean_male = 0,\n                                initmean_female = 0,\n                                shared,\n                                generations = 100){\n \n  v &lt;- v / (popsize/2) # to make the situation comparable with the assumptions in the numerical stuff\n  \n  track_matings &lt;- 20 # number of matings we track for a female - if she's mated with &gt;20 males and the first 20 are all sperm depleted this is a potential problem, in that case please increase this value\n  \n  # initialise the population\n  pop &lt;-\n    tibble(sex = sign(runif(popsize, -1, 1)),\n           shared_allele_1 = rnorm(popsize, 0, 1) + initmean_shared,\n           shared_allele_2 = rnorm(popsize, 0, 1) + initmean_shared,\n           male_allele_1 = rnorm(popsize, 0, 1) + initmean_male,\n           male_allele_2 = rnorm(popsize, 0, 1) + initmean_male,\n           female_allele_1 = rnorm(popsize, 0, 1) + initmean_female,\n           female_allele_2 = rnorm(popsize, 0, 1) + initmean_female,\n           male_deathrate = rep(d, popsize),\n           female_deathrate = rep(d, popsize))\n  \n  # next we need some code to denote which loci are expressed in which sex\n  \n  # not done yet\n  \n# run one mating season\n# figure out when each individual emerges (according to their timing phenotype)\n\n  data &lt;- matrix(NA, nrow = ((generations - 1) %/% 10) + 1, ncol = 4)\n # we plan to plot data every 10 generations (every generation clutters the timeline with too many points...)\n \n  t_for_axis &lt;- seq(from = 0, to = generations, by = 10)\n  \n  # start the simulation\n  \n  while(gen_counter &lt; generations){\n  \n    x &lt;- pop %&gt;% \n      rowwise() %&gt;% \n      mutate(phenotype = if_else(sex &lt; 0, mean(shared_allele_1, shared_allele_2, male_allele_1, male_allele_2),\n                                 mean(shared_allele_1, shared_allele_2, female_allele_1, female_allele_2))) %&gt;% \n      ungroup() %&gt;% \n      mutate(stochastic_value = runif(n = n()),\n             emergence_time = phenotype + log(stochastic_value/(1 - stochastic_value)),\n             death_time = if_else(sex &lt; 0, emergence_time + rexp(n  = n(), 1/male_deathrate),\n                                  emergence_time + rexp(n  = n(), 1/female_deathrate)))\n    \n  }\n \n    \n    \n \n}"
  }
]